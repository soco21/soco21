@startuml
'https://plantuml.com/class-diagram

class BlackJack {
    - Console console;
    - HumanPlayer humanPlayer;
    - Dealer dealer;
    - Pack pack;
    - Play play;

    + BlackJack(Console console, HumanPlayer humanPlayer, Dealer dealer, Pack pack, Play play)
    + void run()
    - void printInitialCards()
    - void dealCards()
    - void printIfBusted(boolean humanPlayerBusted, boolean dealerBusted)
    - void applyScore(Integer humanPlayerScore, Integer dealerScore)
}

class Play {
    - Pack pack;
    - Console console;

    + Play(Pack pack, Console console)
    + Optional<Integer> doPlayFor(Player player)
}

enum PlayAction {
      HIT,
      STAY
}

package ch.uzh.group8.assignment4.exercise1.state {
    class HumanPlayer {
        - Console console;
    
        - Hand hand;
        - int balance = 100;
        - int currentBet;
    
        + HumanPlayer(Console console)
        + boolean wantsToContinue()
        + void startRound()
        + void printInitialHand()
        + void addCard(Card card)
        + void printAllCards()
        + int getScore()
        + PlayAction hitOrStay()
        + void printBalance()
        + void placeBet()
        + void applyWon()
        + void applyLost()
        + boolean isBroke()
    }
    
    class Dealer {
        - Console console;
    
        - Hand hand;
    
        + Dealer(Console console)
        + void startRound()
        + void printInitialHand()
        + void addCard(Card card)
        + void printAllCards()
        + int getScore()
        + PlayAction hitOrStay()
    }
    
    interface Player {
        + void addCard(Card card)
        + void printAllCards()
        + int getScore()
        + PlayAction hitOrStay()
    }
    
    class Hand {
        - Console console
        - List<Card> hand
    
        + Hand(Console console)
        + void addCard(Card card)
        + void printFirstCard()
        + void printAllCards()
        + int getScore()
        - void printCardsUpTo(int to)
        - {static} int getScoreOfRank(Rank rank)
    }
    
    class Pack {
        - List<Card> cards
        + Pack()
        + Card drawCard()
        - {static} List<Card> initializeDeck()
    }

    Player <|.. Dealer
    Player <|.. HumanPlayer
    Dealer ..> Hand
    HumanPlayer ..> Hand
}

package ch.uzh.group8.assignment4.exercise1.domain {
    class Card {
        - Rank rank;
        - Suit suit;
        + {static} of(Suit suit, Rank rank)
        + {static} Set<Card> createDeck()
    }
    
    enum Suit {
        CLUBS,
        DIAMONDS,
        HEARTS,
        SPADES
    }
    
    enum Rank {
      ACE,
      TWO,
      THREE,
      FOUR,
      FIVE,
      SIX,
      SEVEN,
      EIGHT,
      NINE,
      TEN,
      JACK,
      QUEEN,
      KING
    }

    Card ..> Suit
    Card ..> Rank
}

package ch.uzh.group8.assignment4.exercise1.util {
    class Console {
        + void print(String string)
        + String getUserInput()
    }
}

Pack ..> "312" Card
Hand ..> "n" Card

HumanPlayer ..> PlayAction
HumanPlayer ..> Console
Dealer ..> PlayAction
Dealer ..> Console

Play ..> PlayAction
Play ..> Player
Play ..> Pack
Play ..> Console

BlackJack ..> Console
BlackJack .> HumanPlayer
BlackJack .> Dealer
BlackJack .> Pack
BlackJack .> Play

@enduml